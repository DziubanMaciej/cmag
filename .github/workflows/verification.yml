name: Verification

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  Formatting:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Format all files
      run: .github/scripts/format_linux.sh

    - name: Assert no diff
      run: git diff --exit-code

  Test:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release, Debug]
        c_compiler: [gcc, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: ubuntu-latest
            c_compiler: cl

    steps:
    - name: Install ninja and mesa
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install -y ninja-build libgl1-mesa-dev
      
    - name: Install ninja
      if: matrix.os == 'windows-latest'
      run: choco install ninja

    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: 'true'

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -DCMAG_BUILD_BROWSER=1
        -DCMAG_BUILD_TESTS=1
        -DGLFW_BUILD_X11=OFF
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }} --verbose

  TestCmake3_15:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

    steps:
    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"
        echo "cmake_dir=${{ github.workspace }}/cmake-3.15.0-rc4-Linux-x86_64/bin" >> "$GITHUB_OUTPUT"

    - name: Install ninja and mesa
      run: sudo apt-get install -y ninja-build libgl1-mesa-dev

    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: 'true'

    - name: Download CMake 3.15
      run: |
        wget -O ${{ github.workspace }}/cmake3.15.tar.gz https://cmake.org/files/v3.15/cmake-3.15.0-rc4-Linux-x86_64.tar.gz
        tar -xzf ${{ github.workspace }}/cmake3.15.tar.gz -C ${{ github.workspace }}

    - name: CMake
      run: >
        ${{ steps.strings.outputs.cmake_dir }}/cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=g++
        -DCMAKE_C_COMPILER=gcc
        -DCMAKE_BUILD_TYPE=Release
        -DCMAG_BUILD_BROWSER=1
        -DCMAG_BUILD_TESTS=1
        -DGLFW_BUILD_X11=OFF
        -S ${{ github.workspace }}

    - name: Build
      run: ${{ steps.strings.outputs.cmake_dir }}/cmake --build ${{ steps.strings.outputs.build-output-dir }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ${{ steps.strings.outputs.cmake_dir }}/ctest --verbose
