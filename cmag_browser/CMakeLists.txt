add_executable(cmag_browser)
target_common_setup(cmag_browser)
target_find_sources_and_add(cmag_browser)
target_include_directories(cmag_browser PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/..)
target_link_libraries(cmag_browser PRIVATE Imgui Stb cmag_core glm)
add_subdirectories()
target_setup_vs_folders(cmag_browser)

install(TARGETS cmag_browser)

function(add_asset INPUT_FILE OUTPUT_FILE VARIABLE_NAME)
    header_pack_generate_from_binary(cmag_browser "assets/${INPUT_FILE}" "${OUTPUT_FILE}" "${VARIABLE_NAME}" 16)
    source_group(assets FILES "assets/${INPUT_FILE}")
    source_group(assets/generated FILES "${CMAKE_BINARY_DIR}/generated/generated/${OUTPUT_FILE}")
endfunction()
add_asset(Aller_Rg.ttf font.h cmagBrowserFont)
add_asset(folder.png folder_icon.h folderIconPngBytes)
add_asset(cmake_icon.png cmake_icon.h cmakeIconPngBytes)
