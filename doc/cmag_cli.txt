Usage

    cmag [cmag_args] <cmake_command> <cmake_args>

Prepend name of cmag binary to CMake command to generate .cmag-project file. Cmag parses the
command line arguments to figure out values passed to CMake, like source directory or build
directory. All arguments are then passed verbatim to CMake. Output .cmag-project file will reside
in CMake's build directory.

Cmag supports a number of additional arguments, all of which must be specified before the CMake command.
    -v    show version of cmag.
    -p    name of the project. Used in filename before .cmag-project extension. Default is "project".
    -e    extra properties. By default Cmag dumps a predefined list of CMake properties. The user can extend this list
          by additional properties. Multiple properties are delimited by a semicolon.
    -d    json debug. Dump json files before generator expression evaluation. Useful for cmag development.
    -g    launch gui. Open generated project in cmag_browser immediately.
    -f    make find_package() global. By default IMPORTED targets are scoped only to the directory in which they are
          created. This causes cmag to be unable to gather all information about them. This option enables a CMake
          switch CMAKE_FIND_PACKAGE_TARGETS_GLOBAL, which make them all scoped globally. Use with caution - this can
          potentially break something in a project, which is not ready for it.

Examples:
    cmag cmake ..
    cmag /usr/bin/cmake ..
    cmag -p main_project cmake -S=. -B=build
    cmag -e "OUTPUT_NAME;LINK_FLAGS" cmake ..
